worker_processes 1;

user nobody nogroup;

pid /tmp/nginx.pid;
error_log /var/log/nginx/error.log;

events {
  worker_connections 1024;
  accept_mutex off; # "on" if nginx worker_processes > 1
}

http {
  include mime.types;

  default_type application/octet-stream;

  access_log /var/log/nginx/access.log combined;

  sendfile on;

  tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  tcp_nodelay off; # on may be better for some Comet/long-poll stuff

  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript
             application/atom+xml;

  upstream app_server {
    server app:8000 fail_timeout=0;
  }

  server {
    return 204;
  }

  server {
    server_name skyderby.ru www.skyderby.ru blog.skyderby.ru;
    listen 80;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl default deferred http2;
    server_name skyderby.ru;
    ssl_stapling on;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/skyderby.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/skyderby.ru/privkey.pem;
    ssl_dhparam /etc/pki/nginx/dhparam.pem;
    ssl_session_timeout 24h;
    ssl_session_cache shared:SSL:2m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
    ssl_prefer_server_ciphers on;

    if ($http_user_agent ~* (AhrefsBot|SemrushBot|BaiduSpider|Jorgee|MJ12bot)) {
      return 444;
    }

    # If you have IPv6, you'll likely want to have two separate listeners.
    # One on IPv4 only (the default), and another on IPv6 only instead
    # of a single dual-stack listener.  A dual-stack listener will make
    # for ugly IPv4 addresses in $remote_addr (e.g ":ffff:10.0.0.1"
    # instead of just "10.0.0.1") and potentially trigger bugs in
    # some software.
    # listen [::]:80 ipv6only=on; # deferred or accept_filter recommended

    client_max_body_size 10m;

    # ~2 seconds is often enough for most folks to parse HTML/CSS and
    # retrieve needed images/icons/frames, connections are cheap in
    # nginx so increasing this is generally safe...
    keepalive_timeout 5;

    # path for static files
    root /opt/app/public;

    try_files $uri/index.html $uri.html $uri @app;

    location ^~ /assets/ {
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }

    location ^~ /packs/ {
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }

    location ~* \.(png|jpg|jpeg|gif|ico)$ {
      expires max;
      add_header Cache-Control public;
    }

    location @app {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      proxy_pass http://app_server;
    }

    # Rails error pages
    error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #  root /opt/app/public;
    #}
  }

  server {
    listen 443;
    server_name blog.skyderby.ru;

    location ~ / {
      root /opt/blog;
      index index.html;
    }

    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root /opt/app/public;
    }
  }
}
